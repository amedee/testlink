Option Explicit

Public rsa(0 To 100, 0 To 1) As String  ' ReplacementStringsArray, but shorter to reduce typing

Public Sub InitializeReplacementStringsArray()
    ' Be careful when editing this array. The first element of each pair is a special character
    ' that *almost* looks the same as a normal ASCII character, but not quite.
    ' XML import in TestLink *will* die horribly if the data isn't sanitized first.
    ' Also, please blame MS Office for the so-called "smart quotes" and similar shenanigans.
    '
    ' LIMITATIONS:
    ' * Double tilde (approximation sign) cannot be parsed by VBA. Under investigation.
    '   Use Find&Replace manually in Excel!
    '   Future implementation may use Application.WorksheetFunction.Substitute and
    '   a range with replacement characters, perhaps this will yield a better result.
    ' * Chr(176), Chr(186) (degrees symbol) can't be parsed by TestLink, so replacing the
    '   degrees symbol with the word "degrees".
    
    rsa(0, 0) = Chr(149)
    rsa(0, 1) = "*"
    rsa(1, 0) = Chr(150)
    rsa(1, 1) = "-"
    rsa(2, 0) = Chr(146)
    rsa(2, 1) = "'"
    rsa(3, 0) = Chr(145)
    rsa(3, 1) = "'"
    rsa(4, 0) = Chr(147)
    rsa(4, 1) = """"        'double quote needs to be escaped this way
    rsa(5, 0) = Chr(133)
    rsa(5, 1) = "..."
    rsa(6, 0) = Chr(160)
    rsa(6, 1) = " "
    rsa(7, 0) = Chr(176)
    rsa(7, 1) = "degrees"
    rsa(8, 0) = Chr(186)
    rsa(8, 1) = "degrees"
    rsa(9, 0) = Chr(152)
    rsa(9, 1) = "~"
    rsa(10, 0) = Chr(148)
    rsa(10, 1) = """"
    rsa(11, 0) = Chr(189)
    rsa(11, 1) = "1/2"
    rsa(12, 0) = Chr(172)
    rsa(12, 1) = "-"
    rsa(13, 0) = Chr(188)
    rsa(13, 1) = "1/4"

End Sub

Public Function SanitizeXMLdata(ByVal XMLdata As String) As String
    SanitizeXMLdata = XMLdata

    Dim i As Integer
    For i = LBound(rsa, 1) To UBound(rsa, 1)
        SanitizeXMLdata = Replace(SanitizeXMLdata, rsa(i, 0), rsa(i, 1))
    Next i
    
End Function
